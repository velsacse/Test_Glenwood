<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.glenwood.glaceinternship</groupId>
  <artifactId>glaceinternship</artifactId>
  <packaging>war</packaging>
  <version>5.0-SNAPSHOT</version>
  <name>Glace Glaceinternship User Interface</name>

  <properties>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.5.1</gwtVersion>
	<glenwood-core.version>5.0-SNAPSHOT</glenwood-core.version>
	<gin.version>2.1.2</gin.version>
	<gwt.style>OBF</gwt.style>
	
	<!-- Client and Server -->
	<junit.version>4.11</junit.version>
	<gwt-test-utils.version>0.44</gwt-test-utils.version>
	<jukito.version>1.3</jukito.version>
	<postgresql.version>9.1-901.jdbc4</postgresql.version>
	<jbcrypt.version>0.3m</jbcrypt.version>
    <selenium.version>2.25.0</selenium.version>
    <cucumber.version>1.0.14</cucumber.version>
	<javax.validation.version>1.0.0.GA</javax.validation.version>
	
	 <!-- Maven -->
	 <gwt-maven-plugin.version>2.5.1</gwt-maven-plugin.version>
	 <maven-surefire-plugin.version>2.9</maven-surefire-plugin.version>
     <maven-failsafe-plugin.version>2.12</maven-failsafe-plugin.version>
     <maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
     <maven-war-plugin.version>2.2</maven-war-plugin.version>
     <maven-deploy-plugin.version>2.7</maven-deploy-plugin.version>
     <tomcat-maven-plugin.version>2.0</tomcat-maven-plugin.version>
     <jetty-plugin.version>8.1.0.v20120127</jetty-plugin.version>

     <target.jdk>1.7</target.jdk>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
     <project.deployment.encoding>UTF-8</project.deployment.encoding>

	
	
    <!-- GWT needs at least java 1.5 -->
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.deployment.encoding>UTF-8</project.deployment.encoding>
  </properties>

  <dependencies>
   <!-- Google Web Toolkit dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
		<groupId>com.google.gwt</groupId>
		<artifactId>gwt-dev</artifactId>
		<version>${gwtVersion}</version>
	</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>
		
	
	<!-- DI dependencies -->

        <dependency>
            <groupId>com.google.gwt.inject</groupId>
            <artifactId>gin</artifactId>
            <version>${gin.version}</version>
            <scope>provided</scope>
        </dependency>
	
	<!-- Test dependencies -->
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
           <groupId>com.googlecode.gwt-test-utils</groupId>
	       <artifactId>gwt-test-utils</artifactId>
	       <version>${gwt-test-utils.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jukito</groupId>
            <artifactId>jukito</artifactId>
            <version>${jukito.version}</version>
            <scope>test</scope>
        </dependency>
        
       
     
<!-- Selenium Testing -->
       <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.40.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-chrome-driver</artifactId>
            <version>2.40.0</version>
            <scope>test</scope>
        </dependency>
<dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-firefox-driver</artifactId>
        <version>2.40.0</version>
</dependency>
        
        <!-- Cucumber Testing -->
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-core</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-guice</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.1.3</version>
            <scope>test</scope>
        </dependency>
	
	
	
	 <!-- Other dependencies -->
      
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>${jbcrypt.version}</version>
        </dependency>
	
		<dependency>
	<groupId>org.json</groupId>
	<artifactId>json</artifactId>
	<version>20090211</version>
</dependency>
<dependency>
	<groupId>javax.validation</groupId>
	<artifactId>validation-api</artifactId>
	<version>1.0.0.GA</version>
</dependency>

	<dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2.3</version>
      <scope>compile</scope>
    </dependency>
   
	<dependency>
	<groupId>com.googlecode.gwtphonegap</groupId>
	<artifactId>gwtphonegap</artifactId>
	<version>2.4.0.0</version>
</dependency>
            

	<dependency>
		<groupId>commons-dbutils</groupId>
		<artifactId>commons-dbutils</artifactId>
		<version>1.5</version>
	</dependency>
	
	<dependency>
	<groupId>commons-beanutils</groupId>
	<artifactId>commons-beanutils-core</artifactId>
	<version>1.8.3</version>
</dependency>
	
	

	
	<!-- this jar is used in development eniv where the jetty server is used. the reason is the database connection will be in context file which needs to be retrived for datasource  -->
	<dependency>
		<groupId>org.mortbay.jetty</groupId>
		<artifactId>jetty-naming</artifactId>
		<version>6.1.26</version>
	</dependency>
	<!-- this jar is used in development eniv where the jetty server is used. the reason is the database connection will be in context file which needs to be retrived for datasource  -->
	<dependency>
		<groupId>org.mortbay.jetty</groupId>
		<artifactId>jetty-plus</artifactId>
		<version>6.1.26</version>
	</dependency>


<!-- jdbc type 4 postgres jar  -->
	<dependency>
		<groupId>postgresql</groupId>
		<artifactId>postgresql</artifactId>
		<version>9.1-901.jdbc4</version>
	</dependency>
  
  </dependencies>
  
  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

	<resources>
        <resource>
         <directory>src/main/resources</directory>
		</resource>
		 <resource>
            <directory>src/main/java</directory>
             <includes> 
      	  <include>**/*.ui.xml</include> 
    	  </includes> 
        </resource>
    </resources>

    <testResources>
        <testResource>
          <directory>src/test/resources</directory>
         </testResource>
    </testResources>

    <plugins>

	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
          <source>${target.jdk}</source>
          <target>${target.jdk}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <proc>none</proc>
          </configuration>
      </plugin>
	  
      <!-- GWT Maven Plugin -->
            <!-- run 'mvn gwt:run' for running application from terminal -->
            <!-- run 'mvn integration-test' for running the GwtTestSuite -->
            <!-- run 'mvn clean install' will build war to local repo ~/.m2/com/arcbees/samples/CarSample/*.war -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwt-maven-plugin.version}</version>
                <configuration>
                    <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>

                    <strict>true</strict>
                    <testTimeOut>180</testTimeOut>
                    <!-- With multiple tests use GwtTestSuite.java for speed -->
                    <includes>**/*GwtTest.java</includes>
                    <!-- <includes>**/*GwtTestSuite.java</includes> -->
                    <mode>htmlunit</mode>

                    <extraJvmArgs>-Xss1024K -Xmx1024M -XX:MaxPermSize=256M</extraJvmArgs>
                    <logLevel>INFO</logLevel>
                    <style>${gwt.style}</style>

                    <copyWebapp>true</copyWebapp>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>

                    <compileReport>true</compileReport>
					<runTarget>glaceinternship.html</runTarget>
					<!--i18nMessagesBundle>com.glenwood.glaceinternship.client.Messages</i18nMessagesBundle-->
                </configuration>
                  <executions>
                    <execution>
                      <goals>
						<goal>compile</goal>
						<goal>test</goal>
						<!--goal>i18n</goal-->
						<goal>generateAsync</goal>
					 </goals>
					</execution>
				</executions>
        <!-- Plugin configuration. There are many available options, see 
          gwt-maven-plugin documentation at codehaus.org -->
        
		
      </plugin>
	  
	  <!-- Skip deploying to remote url -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <webappDirectory>${webappDirectory}</webappDirectory>
                </configuration>
            </plugin>
      
	  <!-- Tomcat deployment configuration -->
            <!-- See more: http://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/usage.html -->
            <!-- run 'mvn clean deploy -Pdeploy-demo' -->
            <!-- run 'mvn tomcat7:deploy -Pdeploy-demo -DskipTests -X' debug deploy -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>${tomcat-maven-plugin.version}</version>
                <configuration>
                    <!-- add the security credentials to ~/.m2/settings.xml <id>...</id> -->
                    <server>arcbees-tomcat</server>
                    <path>${tomcat.path}</path>
                    <url>${tomcat.server.url}</url>
                    <update>true</update>
                </configuration>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Integration testing which runs clases *TestInt.java -->
            <!-- run 'mvn integration-test' -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*TestInt.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Server for running Cucumber tests *TestInt.java -->
            <!-- 'mvn jetty:run' deploys and starts -->
            <!-- mvn jetty:start -->
            <!-- mvn jetty:stop -->
            <!-- mvn jetty:run -->
            <!-- mvn integration-test -Pintegration-test -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty-plugin.version}</version>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopPort>9966</stopPort>
                    <stopKey>stop-jetty</stopKey>
                    <webAppSourceDirectory>${webappDirectory}</webAppSourceDirectory>
                    <webApp>
                        <descriptor>${webappDirectory}/WEB-INF</descriptor>
                    </webApp>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.port</name>
                            <value>8888</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <daemon>true</daemon>
                            <scanIntervalSeconds>0</scanIntervalSeconds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
    </plugins>
    
  </build>

    <pluginRepositories>
        <pluginRepository>
            <id>apache.snapshots</id>
            <name>Apache Snapshots</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
